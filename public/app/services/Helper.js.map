{"version":3,"sources":["../../src/app/services/Helper.ts"],"names":[],"mappings":"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","file":"Helper.js","sourcesContent":["/**\r\n * Created by hiepl on 4/15/2018.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport {Http, Response} from \"@angular/http\";\r\n\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n    constructor (private http: Http) {}\r\n    formatDateTime(date : Date) {\r\n        var datetimeStr = \"\";\r\n        var year = date.getFullYear();\r\n        var month = ((date.getMonth() + 1) < 10 ? (\"0\" + (date.getMonth() + 1)) : (date.getMonth() + 1));\r\n        var dateStr = (date.getDate() < 10 ? \"0\" + (date.getDate()) : date.getDate());\r\n        var hour = (date.getHours() < 10 ? (\"0\" + date.getHours()) : date.getHours());\r\n        var minutes = (date.getMinutes() < 10 ? (\"0\" + date.getMinutes()) : date.getMinutes());\r\n        var second = (date.getSeconds() < 10 ? (\"0\" + date.getSeconds()) : date.getSeconds());\r\n        return year + '-' + month + '-' + dateStr + \" \" + hour + \":\" + minutes + \":\" + second;\r\n    }\r\n    getDataFromPost(url : string, options? : any): Promise<any> {\r\n        //make ajax call in general use\r\n        let _this = this;\r\n        return this.http.post(url, options).toPromise()\r\n            .then(function(value){\r\n                return _this.extractData(value);\r\n            })\r\n            .catch(this.handleError);\r\n    };\r\n    getData(url : string): Promise<any> {\r\n        //make ajax call in general usei\r\n        let _this = this;\r\n        return this.http.get(url).toPromise()\r\n            .then(function(value){\r\n                return _this.extractData(value);\r\n            })\r\n            .catch(this.handleError);\r\n    };\r\n    extractData(value: Response) {\r\n        let body = value.json();\r\n        if ( body.status ) {\r\n            return body.data;\r\n        }\r\n        return [];\r\n    };\r\n    handleError() : void {};\r\n}"],"sourceRoot":"/src"}