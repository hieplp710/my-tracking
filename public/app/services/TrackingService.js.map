{"version":3,"sources":["../../src/app/services/TrackingService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaa,eAAe;gBACxB,yBAAqB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;gBAAG,CAAC;gBAEnC,sCAAY,GAAZ,UAAa,GAAY;oBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE;yBACrC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;yBACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjC,CAAC;gBAAA,CAAC;gBACM,qCAAW,GAAnB,UAAoB,KAAe;oBAC/B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACxB,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;wBACpB,IAAI,OAAO,GAAc,EAAE,CAAC;wBAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACnC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BACnB,IAAI,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;4BAC1B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;4BACjC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;4BACzC,IAAI,IAAI,GAAgB,EAAE,CAAC;4BAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC7C,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gCAC5B,IAAI,MAAM,GAAc;oCACpB,GAAG,EAAG,GAAG,CAAC,GAAG;oCACb,GAAG,EAAG,GAAG,CAAC,GAAG;oCACb,KAAK,EAAG,KAAK;oCACb,MAAM,EAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;oCACxC,IAAI,EAAG,GAAG,CAAC,UAAU;oCACrB,QAAQ,EAAE,GAAG,CAAC,QAAQ;iCACzB,CAAC;gCACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACtB,CAAC;4BAAA,CAAC;4BACF,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;4BACxB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACzB,CAAC;wBACD,MAAM,CAAC,OAAO,CAAC;oBACnB,CAAC;oBACD,MAAM,CAAC,EAAE,CAAC;gBACd,CAAC;gBAAA,CAAC;gBACF,qCAAW,GAAX,cAAsB,CAAC;gBAAA,CAAC;gBAC5B,sBAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCY,eAAe;gBAD3B,iBAAU,EAAE;iDAEkB,WAAI;eADtB,eAAe,CAsC3B;;QAAA,CAAC","file":"TrackingService.js","sourcesContent":["/**\r\n * Created by hiepl on 6/24/2017.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport {Marker} from \"../map/models/marker\";\r\nimport {Http, Response} from \"@angular/http\";\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport {Location} from \"../map/models/Location\";\r\n\r\n@Injectable()\r\nexport class TrackingService {\r\n    constructor (private http: Http) {}\r\n\r\n    getLocations(url : string): Promise<Marker[]> {\r\n        return this.http.post(url, {}).toPromise()\r\n            .then(this.extractData)\r\n            .catch(this.handleError);\r\n    };\r\n    private extractData(value: Response) {\r\n        let body = value.json();\r\n        if ( body.length > 0 ) {\r\n            let markers : Marker[] = [];\r\n            for (let i = 0; i < body.length; i++) {\r\n                let temp = body[i];\r\n                let marker = new Marker();\r\n                marker.deviceId = temp.device_id;\r\n                marker.deviceNumber = temp.device_number;\r\n                let locs : Location[] = [];\r\n                for (let j = 0; j < temp.locations.length; j++) {\r\n                    let loc = temp.locations[j];\r\n                    let newLoc : Location = {\r\n                        lat : loc.lat,\r\n                        lng : loc.lng,\r\n                        state : 'N/A',\r\n                        status : (loc.status > 0 ? 'On' : 'Off'),\r\n                        time : loc.created_at,\r\n                        velocity: loc.velocity,\r\n                    };\r\n                    locs.push(newLoc);\r\n                };\r\n                marker.locations = locs;\r\n                markers.push(marker);\r\n            }\r\n            return markers;\r\n        }\r\n        return [];\r\n    };\r\n    handleError() : void {};\r\n}"],"sourceRoot":"/src"}